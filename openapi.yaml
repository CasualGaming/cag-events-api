---
openapi: 3.0.0
info:
  title: CaG Events API
  description: API between CaG Events front-end and back-end.
  version: 1.0.0-SNAPSHOT
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  contact:
    url: https://github.com/CasualGaming/cag-events-api
    email: dev@casualgaming.no

paths:
  /event:
    get:
      tags:
        - event
      summary: Fetch all Events
      responses:
        "200":
          description: Success
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
    post:
      tags:
        - event
      summary: Create Event
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
        description: data
        required: true
      responses:
        "200":
          description: Success
  "/event/{id}":
    parameters:
      - in: path
        name: id
        description: ID of Event
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - event
      responses:
        "200":
          description: Success
    patch:
      tags:
        - event
      responses:
        "200":
          description: Success
    delete:
      tags:
        - event
      responses:
        "200":
          description: Success
  /event/upcoming:
    get:
      tags:
        - event
      responses:
        "200":
          description: Success
  /news:
    get:
      tags:
        - news
      summary: Fetch all news
      responses:
        "200":
          description: Success
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Article"
    post:
      tags:
        - news
      summary: Create article
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Article"
        description: data
        required: true
      responses:
        "200":
          description: Success
  "/news/{id}":
    parameters:
      - in: path
        name: id
        description: ID of article
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - news
      summary: Fetch news article
      responses:
        "200":
          description: Article data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Article"
    patch:
      tags:
        - news
      summary: Update article
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Article"
        description: Article data
        required: true
      responses:
        "200":
          description: Success
    delete:
      tags:
        - news
      summary: Delete article
      responses:
        "200":
          description: Success
  "/event/{id}/sponsor":
    parameters:
      - in: path
        name: id
        description: ID of Event
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - event
      summary: Fetch all sponsors
      responses:
        "200":
          description: Success
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Sponsor"
  /sponsor:
    get:
      tags:
        - sponsor
      responses:
        "200":
          description: Success
    post:
      tags:
        - sponsor
      responses:
        "200":
          description: Success
  "/sponsor/{id}":
    parameters:
      - in: path
        name: id
        description: ID of sponsor
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - sponsor
      summary: Fetch sponsor
      responses:
        "200":
          description: Sponsor data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sponsor"
    patch:
      tags:
        - sponsor
      summary: Update article
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Sponsor"
        description: Sponsor data
        required: true
      responses:
        "200":
          description: Success
    delete:
      tags:
        - sponsor
      summary: Delete sponsor
      responses:
        "200":
          description: Success
  "/event/{id}/compo":
    parameters:
      - in: path
        name: id
        description: ID of Event
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - event
      summary: Fetch all competitions
      responses:
        "200":
          description: Success
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Compo"
  "/event/{id}/news":
    parameters:
      - in: path
        name: id
        description: ID of Event
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - event
      responses:
        "200":
          description: Success
  "/event/{id}/products":
    parameters:
      - in: path
        name: id
        description: ID of Event
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - event
      responses:
        "200":
          description: Success
  /compo:
    get:
      tags:
        - compo
      responses:
        "200":
          description: Success
    post:
      tags:
        - compo
      responses:
        "200":
          description: Success
  "/compo/{id}":
    parameters:
      - in: path
        name: id
        description: ID of compo
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - compo
      summary: Fetch competition
      responses:
        "200":
          description: Compo data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Compo"
    patch:
      tags:
        - compo
      summary: Update competition
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Compo"
        description: Competition data
        required: true
      responses:
        "200":
          description: Success
    delete:
      tags:
        - compo
      summary: Delete competition
      responses:
        "200":
          description: Success
  /teams:
    get:
      tags:
        - teams
      summary: Fetch all teams
      responses:
        "200":
          description: Success
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team"
    post:
      tags:
        - teams
      summary: Create team
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Team"
        description: Data
        required: true
      responses:
        "200":
          description: Success
  "/teams/{id}":
    parameters:
      - in: path
        name: id
        description: ID of team
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - teams
      summary: Fetch team by ID
      responses:
        "200":
          description: team data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
    patch:
      tags:
        - teams
      summary: Updates team
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Team"
        description: Data
      responses:
        "200":
          description: Success
    delete:
      tags:
        - teams
      summary: Deletes a team
      responses:
        "200":
          description: Success
  /users:
    get:
      tags:
        - users
      summary: Fetch all users
      responses:
        "200":
          description: Success
  "/users/{username}":
    parameters:
      - in: path
        name: username
        description: The name that needs to be fetched.
        required: true
        schema:
          type: string
    get:
      tags:
        - users
      summary: Get user by user name
      responses:
        "200":
          description: Success
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/User"
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  "/users/{username}/teams":
    parameters:
      - name: username
        in: path
        description: The name that needs to be fetched.
        required: true
        schema:
          type: string
    get:
      tags:
        - users
      summary: Get team by username
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /products:
    get:
      tags:
        - products
      responses:
        "200":
          description: Success
    post:
      tags:
        - products
      responses:
        "200":
          description: Success
  "/products/{id}":
    parameters:
      - in: path
        name: id
        description: ID of product
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - products
      responses:
        "200":
          description: Success
    patch:
      tags:
        - products
      responses:
        "200":
          description: Success
    delete:
      tags:
        - products
      responses:
        "200":
          description: Success
  /ticket:
    get:
      tags:
        - ticket
      summary: "Get all tickets owned by the user"
      responses:
        "200":
          description: Success
  "/ticket/{id}":
    parameters:
      - in: path
        name: id
        description: ID of ticket
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - ticket
      summary: "Get a ticket"
      responses:
        "200":
          description: Success
    patch:
      tags:
        - ticket
      summary: "Change a ticket"
      responses:
        "200":
          description: Success
  "/ticket/{id}/regen-activation-code":
    parameters:
      - in: path
        name: id
        description: ID of ticket
        required: true
        schema:
          type: integer
          format: int64
    post:
      tags:
        - ticket
      summary: "Regenerate the activation code for an unassigned ticket"
      responses:
        "200":
          description: Success
  /order:
    get:
      tags:
        - order
      responses:
        "200":
          description: Success
    post:
      tags:
        - order
      responses:
        "200":
          description: Success
    patch:
      tags:
        - order
      responses:
        "200":
          description: Success

components:
  securitySchemes:
    oidc:
      type: openIdConnect
      openIdConnectUrl: https://localhost
  schemas:
    Compo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Sponsor:
      type: object
      properties:
        id:
          type: string
        data:
          type: string
    Article:
      type: object
      properties:
        id:
          type: string
        header:
          type: string
        body:
          type: string
    Event:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Team:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        members:
          type: array
          items:
            $ref: "#/components/schemas/User"
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
